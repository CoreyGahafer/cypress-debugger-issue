import{ensureBrowserFlags as B,install as I}from"@neuralegion/cypress-har-generator";import a from"path";import R from"chrome-remote-interface";import S from"debug";var l="--remote-debugging-port",C=["chromium"];var o=S("cypress-debugger");o.log=console.log.bind(console);var s,p,g=!1,u={logEntry:[],runtimeConsoleApiCalled:[]};function b(e){return C.includes(e==null?void 0:e.family)}function v(e){let t=e.find(r=>r.slice(0,l.length)===l);return t?Number(t.split("=")[1]):void 0}function x(){let e=process.env.ELECTRON_EXTRA_LAUNCH_ARGS;if(!(e!=null&&e.includes(l)))throw new Error(`Missing ${l} command line switch for Electron browser`);return e.split(" ")}function L(e,t){e.name==="electron"&&(t=x());let r=v(t);return r||(r=4e4+Math.round(Math.random()*25e3),o("Remote Debugging Port not set, using a random port: %d",r),t.push(`${l}=${r}`)),r}async function F(){o("Attaching cdp handlers"),s&&(s.Log.enable(),s.Log.entryAdded(e=>{u.logEntry.push(e.entry)}),s.Runtime.enable(),s.Runtime.consoleAPICalled(e=>{u.runtimeConsoleApiCalled.push(e)}))}async function M(){let r=0,n=async()=>{try{s=await R({port:p}),o("Connected to Chrome DevTools Protocol"),s.on("disconnect",()=>{o("Chrome DevTools Protocol disconnected"),g=!1})}catch(i){if(r+=1,r===5)throw new Error(`Failed to connect to Chrome DevTools Protocol after ${100*r}`);r<5&&(o("Failed to connect to Chrome DevTools Protocol, attempt: %d",r),o("Reconnecting..."),await new Promise(m=>setTimeout(m,100)),await n())}};await n()}function T(e,t){let r=t.args||t;return b(e)?(p=L(e,r),t):o("Warning: An unsupported browser family was used, output will not be logged to console: %s",e.family)}async function E(){if(!p)throw new Error("Remote Debugging Port not set");s&&g&&(o("Closing the current cdp connection"),await s.close()),o("Attempting to connect to Chrome DevTools Protocol"),await M(),g=!0,await F()}function P(){return u}function h(){u={logEntry:[],runtimeConsoleApiCalled:[]}}import c from"fs";var d=e=>{c.existsSync(e)||c.mkdirSync(e,{recursive:!0})},w=(e,t)=>{c.writeFileSync(e,t)},O=e=>c.readFileSync(e),D=e=>{c.unlinkSync(e)},N=e=>{c.existsSync(e)&&c.rmdirSync(e,{recursive:!0})};var f="dump_har",G=(e,t)=>{d(t);let r=a.join(t,e.meta.spec);d(r);let n=`${e.meta.test.join(" -- ")} (${e.meta.state})${e.meta.retryAttempt>0?` (attempt ${e.meta.retryAttempt+1})`:""}`,i=a.join(r,`${n}.json`);return w(i,JSON.stringify(e,null,2)),i},$=e=>{try{let t=a.join(f,e),r=O(t),n=JSON.parse(r.toString("utf-8"));return D(t),n}catch(t){return null}};function H(e,t,r){return r!=null&&r.failedTestsOnly&&(t.env.__cypress_debugger_failedTestsOnly=!0),e("task",{dumpEvents(n){let i=$(n.harFilename),m=P();h();let y={id:n.id,cy:n.cy,rr:n.rr,meta:n.meta,har:i,browserLogs:m,pluginMeta:r==null?void 0:r.meta},_=r!=null&&r.targetDirectory&&a.resolve(r.targetDirectory)!==a.resolve(f)?r.targetDirectory:"dump",A=G(y,_);return r&&r.callback&&r.callback(A,y),null},cleanup(){return N(f),null}}),I(e),e("before:browser:launch",(n,i)=>(B(n,i),T(n,i),i)),e("before:spec",async()=>{await E()}),t}var U=H;export{U as installPlugin};
//# sourceMappingURL=index.mjs.map